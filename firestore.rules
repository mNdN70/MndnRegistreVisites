/**
 * @file Firebase Security Rules for Visit Logging Application
 *
 * Core Philosophy:
 * This ruleset prioritizes simplicity and security for a visit logging application.
 * Authenticated users have full read and write access to all data.
 *
 * Data Structure:
 * - /persons_to_visit/{personToVisitId}: Stores information about people who can be visited.
 * - /visits/{visitId}: Stores visit records.
 *
 * Key Security Decisions:
 * - Authenticated users can create, read, update, and delete all data.
 * - Data validation is not performed in these rules to allow for rapid prototyping.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to create, read, update, and delete person to visit data.
     * @path /persons_to_visit/{personToVisitId}
     * @allow (create) auth.uid: 'user_abc', data: { id: 'person_1', name: 'John Doe' }
     * @allow (get) auth.uid: 'user_abc'
     * @allow (list) auth.uid: 'user_abc'
     * @allow (update) auth.uid: 'user_abc', data: { name: 'Jane Doe' }
     * @allow (delete) auth.uid: 'user_abc'
     * @deny (create) !isSignedIn()
     * @deny (get) !isSignedIn()
     * @deny (list) !isSignedIn()
     * @deny (update) !isSignedIn()
     * @deny (delete) !isSignedIn()
     * @principle Allows any authenticated user to manage person to visit data.
     */
    match /persons_to_visit/{personToVisitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to create, read, update, and delete visit records.
     * @path /visits/{visitId}
     * @allow (create) auth.uid: 'user_abc', data: { id: 'visit_1', visitorId: 'visitor_1', personToVisitId: 'person_1' }
     * @allow (get) auth.uid: 'user_abc'
     * @allow (list) auth.uid: 'user_abc'
     * @allow (update) auth.uid: 'user_abc', data: { exitTimestamp: '2024-01-02T12:00:00Z' }
     * @allow (delete) auth.uid: 'user_abc'
     * @deny (create) !isSignedIn()
     * @deny (get) !isSignedIn()
     * @deny (list) !isSignedIn()
     * @deny (update) !isSignedIn()
     * @deny (delete) !isSignedIn()
     * @principle Allows any authenticated user to manage visit records.
     */
    match /visits/{visitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
  }

  // Helper function to determine if a user is signed in.
  function isSignedIn() {
    return request.auth != null;
  }
}