/**
 * @file Overview
 * This ruleset enforces a basic data access control model.
 *
 * Data Structure:
 * - /persons_to_visit/{personToVisitId}: Stores information about people who can be visited.
 * - /visits/{visitId}: Stores visit records.
 *
 * Key Security Decisions:
 * - Listing employees requires authentication (any logged-in user can list).
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows read and write access to the persons_to_visit collection for any authenticated user.
     * @path /persons_to_visit/{personToVisitId}
     * @allow (get) User is authenticated.
     * @deny (create) User is not authenticated.
     * @principle Authenticated users can read from this collection.
     */
    match /persons_to_visit/{personToVisitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows read and write access to the visits collection.
     * @path /visits/{visitId}
     * @allow (create) User is authenticated.
     * @deny (update) User is not authenticated.
     * @principle Authenticated users can create visits.
     */
    match /visits/{visitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Denies read access to the employees collection.
     * @path /employees
     * @allow (get) Never.
     * @deny (get) Always.
     * @principle  Access to employees collection is not permitted.
     */
    match /employees {
      allow get: if false;
      allow list: if isSignedIn();
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }

  // Helper function to determine if the user is signed in
  function isSignedIn() {
    return request.auth != null;
  }
}