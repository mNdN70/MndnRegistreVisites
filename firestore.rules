/**
 * @file Overview
 * This ruleset enforces a basic security model focused on isolating user data and preventing unauthorized access.
 *
 * Data Structure:
 * - /persons_to_visit/{personToVisitId}: Stores information about people who can be visited.
 * - /visits/{visitId}: Stores visit records.
 *
 * Key Security Decisions:
 * - The rules prioritize simplicity and security, with clear ownership enforced where applicable.
 * - There is no role-based access control.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Defines access control for the persons_to_visit collection.  Any authenticated user can read any record.  Only authenticated users can create a record. Update and delete are disallowed.
     * @path /persons_to_visit/{personToVisitId}
     * @allow (get, list) Any authenticated user can read data.
     * @allow (create) Any authenticated user can create data.
     * @deny (update, delete) No one can update or delete data.
     * @principle All authenticated users can read and create records.
     */
    match /persons_to_visit/{personToVisitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Defines access control for the visits collection. Any authenticated user can read any record.  Only authenticated users can create a record. Update and delete are disallowed.
     * @path /visits/{visitId}
     * @allow (get, list) Any authenticated user can read data.
     * @allow (create) Any authenticated user can create data.
     * @deny (update, delete) No one can update or delete data.
     * @principle All authenticated users can read and create records.
     */
    match /visits/{visitId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }
  }

  // Helper function to determine if the user is signed in
  function isSignedIn() {
    return request.auth != null;
  }
}