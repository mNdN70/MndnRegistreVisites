/**
 * @fileoverview Firestore Security Rules for the visit logging application.
 *
 * Core Philosophy:
 * This ruleset prioritizes simplicity and security, focusing on protecting
 * visit records and person-to-visit data. It enforces strict ownership and
 * authorization to ensure data integrity and privacy.
 *
 * Data Structure:
 * - /persons_to_visit/{personToVisitId}: Stores information about company
 *   employees who can receive visitors.
 * - /visits/{visitId}: Stores visit records, including visitor details, visit
 *   reason, and timestamps.
 *
 * Key Security Decisions:
 * - No user listing is allowed for either collection.
 * - The ruleset does not enforce a specific data schema beyond authorization
 *   fields, allowing for rapid iteration during prototyping.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description: Manages access control for the `persons_to_visit` collection.
     * @path: /persons_to_visit/{personToVisitId}
     * @allow: (get) Any user can retrieve information about a person to visit.
     * @allow: (list) Any user can list people to visit.
     * @allow: (create) No one can create a person to visit, probably made by backend.
     * @allow: (update) No one can update a person to visit, probably made by backend.
     * @allow: (delete) No one can delete a person to visit, probably made by backend.
     * @deny: (create) Unauthorized users cannot create person to visit entries.
     * @deny: (update) Unauthorized users cannot modify person to visit entries.
     * @deny: (delete) Unauthorized users cannot delete person to visit entries.
     * @principle: Grants public read access while restricting all write access.
     */
    match /persons_to_visit/{personToVisitId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description: Controls access to the `visits` collection, ensuring only
     *               authorized users can create, modify, or delete visit records.
     * @path: /visits/{visitId}
     * @allow: (get) Any user can read visit information.
     * @allow: (list) Any user can list visits.
     * @allow: (create) No one can create a visit.
     * @allow: (update) No one can update a visit.
     * @allow: (delete) No one can delete a visit.
     * @deny: (create) Unauthorized users are prohibited from creating new visit records.
     * @deny: (update) Unauthorized users cannot modify existing visit records.
     * @deny: (delete) Unauthorized users are not allowed to delete visit records.
     * @principle: Restricts write access to authorized users only, allowing open reads.
     */
    match /visits/{visitId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }
  }
}