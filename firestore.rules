/**
 * @file Firebase Security Rules for Visit Management App
 * @core Philosophy: This ruleset implements a hybrid security model. Data in the 'visits' and 'persons_to_visit' collections is generally open for reading. However, writes (create, update, delete) are strictly controlled to ensure data integrity and prevent unauthorized modifications. The 'departments' collection does not exist within our application structure and thus has no write access.
 * @data Structure:
 *   - /persons_to_visit/{personToVisitId}: Stores information about people who can be visited.
 *   - /visits/{visitId}: Stores visit records.
 * @key Security Decisions:
 *   - Read access is generally public, but write access is restricted.
 *   - There are no user-specific subcollections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants read access to all, but denies all write operations, to the 'departments' collection.
     * @path /departments/{departmentId}
     * @allow get, list: Everyone can read the data.
     * @deny create, update, delete: Nobody can write to this collection.
     * @principle Collection does not exist in application structure.
     */
    match /departments/{departmentId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants read access to all, but restricts write access to ensure data integrity for the 'persons_to_visit' collection.
     * @path /persons_to_visit/{personToVisitId}
     * @allow get, list: Everyone can read the data.
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Restricts write access to ensure data integrity
     */
    match /persons_to_visit/{personToVisitId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants read access to all, but restricts write access to ensure data integrity for the 'visits' collection.
     * @path /visits/{visitId}
     * @allow get, list: Everyone can read the data.
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @principle Restricts write access to ensure data integrity
     */
    match /visits/{visitId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}